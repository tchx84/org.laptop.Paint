diff --git a/OficinaActivity.py b/OficinaActivity.py
index da463e6..22e29f5 100644
--- a/OficinaActivity.py
+++ b/OficinaActivity.py
@@ -78,6 +78,7 @@ from Area import Area
 from toolbox import DrawToolbarBox
 import dialogs
 
+from sugarapp.helpers import PrimaryMonitor
 from sugarapp.widgets import SugarCompatibleActivity
 
 
@@ -97,8 +98,8 @@ class OficinaActivity(SugarCompatibleActivity):
 
         self._journal_images = []
         self.fixed = Gtk.Fixed()
-        self._width = Gdk.Screen.width()
-        self._height = Gdk.Screen.height()
+        self._width = PrimaryMonitor.width()
+        self._height = PrimaryMonitor.height()
         self.fixed.modify_bg(Gtk.StateType.NORMAL,
                              style.COLOR_WHITE.get_gdk_color())
 
@@ -161,8 +162,8 @@ class OficinaActivity(SugarCompatibleActivity):
 
     def _configure_cb(self, event):
         ''' Rotate the drawing after a screen rotation '''
-        width = Gdk.Screen.width()
-        height = Gdk.Screen.height()
+        width = PrimaryMonitor.width()
+        height = PrimaryMonitor.height()
         if (self._width > self._height) != (width > height):
             GLib.timeout_add(100, self.area.rotate_right, self.area)
         self._width = width
diff --git a/dialogs.py b/dialogs.py
index 0bd3208..4ae4d10 100644
--- a/dialogs.py
+++ b/dialogs.py
@@ -34,6 +34,7 @@ try:
 except:
     FILTER_TYPE_GENERIC_MIME = 'generic_mime'
 
+from sugarapp.helpers import PrimaryMonitor
 from sugarapp.widgets import DesktopOpenChooser
 
 STORE = None
@@ -48,8 +49,8 @@ class _DialogWindow(Gtk.Window):
         super(_DialogWindow, self).__init__()
 
         self.set_border_width(style.LINE_WIDTH)
-        width = Gdk.Screen.width() - style.GRID_CELL_SIZE * 2
-        height = Gdk.Screen.height() - style.GRID_CELL_SIZE * 2
+        width = PrimaryMonitor.width() - style.GRID_CELL_SIZE * 2
+        height = PrimaryMonitor.height() - style.GRID_CELL_SIZE * 2
         self.set_size_request(width, height)
         self.set_position(Gtk.WindowPosition.CENTER_ALWAYS)
         self.set_decorated(False)

